$date
	Thu Sep 14 09:06:27 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fifo_memory_tb $end
$var wire 8 ! data_out [7:0] $end
$var parameter 32 " ADDR_SIZE $end
$var parameter 32 # DATA_SIZE $end
$var parameter 32 $ DEPTH $end
$var reg 1 % RE $end
$var reg 1 & WE $end
$var reg 1 ' clk $end
$var reg 8 ( data [7:0] $end
$var reg 8 ) data_in [7:0] $end
$var reg 1 * rst $end
$var reg 3 + temp_rd_ptr [2:0] $end
$scope module dut $end
$var wire 1 % RE $end
$var wire 1 & WE $end
$var wire 1 ' clk $end
$var wire 8 , data_in [7:0] $end
$var wire 1 * rst $end
$var parameter 32 - ADDR_SIZE $end
$var parameter 32 . DATA_SIZE $end
$var parameter 32 / DEPTH $end
$var reg 8 0 data_out [7:0] $end
$var reg 3 1 rd_ptr [2:0] $end
$var reg 2 2 st [1:0] $end
$var reg 3 3 wr_ptr [2:0] $end
$var integer 32 4 N [31:0] $end
$var integer 32 5 i [31:0] $end
$scope begin FIFO_MEMORY $end
$scope begin FIFO_CONTROLLER $end
$upscope $end
$scope begin READ_CONTROLLER $end
$upscope $end
$scope begin WRITE_CONTROLLER $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 /
b1000 .
b11 -
b1000 $
b1000 #
b11 "
$end
#0
$dumpvars
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
b0 ,
bx +
1*
b0 )
b0 (
0'
0&
0%
bx !
$end
#5
b0 2
b0 4
b0 3
b0 1
b0 !
b0 0
b1000 5
1'
#10
0'
0*
#15
b10 2
1'
#20
0'
b1 )
b1 ,
b1 (
1&
#25
b0 2
b1 3
b1 4
1'
#30
0'
b10 )
b10 ,
b10 (
#35
b10 3
b10 4
1'
#40
0'
b11 )
b11 ,
b11 (
#45
b11 3
b11 4
1'
#50
0'
b100 )
b100 ,
b100 (
#55
b100 3
b100 4
1'
#60
0'
b101 )
b101 ,
b101 (
#65
b101 3
b101 4
1'
#70
0'
b110 )
b110 ,
b110 (
#75
b110 3
b110 4
1'
#80
0'
b111 )
b111 ,
b111 (
#85
b111 3
b111 4
1'
#90
0'
b1000 )
b1000 ,
b1000 (
#95
b1 2
b0 3
b1000 4
1'
#100
0'
b1001 )
b1001 ,
b1001 (
#105
1'
#110
0'
b0 )
b0 ,
0&
#115
1'
#120
0'
1%
#125
b0 2
b1 1
b1 !
b1 0
b111 4
b0 +
1'
#130
0'
#135
b10 1
b10 !
b10 0
b110 4
b1 +
1'
#140
0'
#145
b11 1
b11 !
b11 0
b101 4
b10 +
1'
#150
0'
0%
#155
1'
#160
0'
b1010 )
b1010 ,
b1010 (
1&
#165
b1 3
b110 4
1'
#170
0'
b1011 )
b1011 ,
b1011 (
#175
b10 3
b111 4
1'
#180
0'
b1100 )
b1100 ,
b1100 (
#185
b1 2
b11 3
b1000 4
1'
#190
0'
b1101 )
b1101 ,
b1101 (
#195
1'
#200
0'
1%
b0 )
b0 ,
0&
#205
b0 2
b100 1
b100 !
b100 0
b111 4
b11 +
1'
#210
0'
#215
b101 1
b101 !
b101 0
b110 4
b100 +
1'
#220
0'
#225
b110 1
b110 !
b110 0
b101 4
b101 +
1'
#230
0'
#235
b111 1
b111 !
b111 0
b100 4
b110 +
1'
#240
0'
#245
b0 1
b1000 !
b1000 0
b11 4
b111 +
1'
#250
0'
#255
b1 1
b1010 !
b1010 0
b10 4
b0 +
1'
#260
0'
#265
b10 1
b1011 !
b1011 0
b1 4
b1 +
1'
#270
0'
#275
b10 2
b11 1
b1100 !
b1100 0
b0 4
b10 +
1'
#280
0'
#285
1'
#290
0'
0%
#295
1'
#300
0'
b1110 )
b1110 ,
b1110 (
1&
#305
b0 2
b100 3
b1 4
1'
#310
0'
b1111 )
b1111 ,
b1111 (
1%
#315
b101 3
b100 1
b1110 !
b1110 0
b1 4
b11 +
1'
#320
0'
b10000 )
b10000 ,
b10000 (
#325
b110 3
b101 1
b1111 !
b1111 0
b1 4
b100 +
1'
#330
0'
b10001 )
b10001 ,
b10001 (
#335
b111 3
b110 1
b10000 !
b10000 0
b1 4
b101 +
1'
#340
0'
b10010 )
b10010 ,
b10010 (
#345
b0 3
b111 1
b10001 !
b10001 0
b1 4
b110 +
1'
#350
0'
b0 )
b0 ,
0%
0&
#355
1'
#360
0'
